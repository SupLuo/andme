apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'


android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {

    def kotlin_version = '1.3.50'
    def lifecycle_version = "2.2.0"
    def glide_version = "4.11.0"
    def retrofit_version = "2.9.0"
    def okhttp3_version = "4.9.0"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    /*必备组件 JetPack系列*/

    api 'androidx.appcompat:appcompat:1.2.0'
    api 'androidx.core:core-ktx:1.3.2'

    /*lifecycle */
    /**
     *  [Lifecycle-ViewModel]
     *  https://developer.android.google.cn/jetpack/androidx/releases/lifecycle
     */
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    /**
     *  [Lifecycle-LiveData]
     *  https://developer.android.google.cn/jetpack/androidx/releases/lifecycle
     */
    api "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"

    /**
     * lifecycle-runtime-ktx 给每个 LifeCycle 对象通过扩展属性定义了协程作用域 lifecycleScope
     * https://www.cnblogs.com/bingxinshuo/archive/2019/10/21/11717209.html
     */
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    /*必备组件 JetPack系列 END*/


    /*第三方常用系列*/
    /*Glide*/
    /**
     *  Glide
     *  <proguard>已添加混淆规则
     *  https://github.com/bumptech/glide
     *  https://muyangmin.github.io/glide-docs-cn/doc/download-setup.html
     * Min Sdk Version - 使用 Glide 需要 min SDK 版本 API 14 (Ice Cream Sandwich) 或更高。
     * Compile Sdk Version - Glide 必须使用 API 27 (Oreo MR1) 或更高版本的 SDK 来编译。
     * Support Library Version - Glide 使用的支持库版本为 27。
     */
    api("com.github.bumptech.glide:glide:$glide_version") {
        exclude group: "com.android.support"
    }
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
    /**
     *  Glide OkHttp集成库
     *  将使 Glide 自动开始使用 OkHttp 来加载所有来自 http 和 https URL 的图片
     */
    api("com.github.bumptech.glide:okhttp-integration:$glide_version") {
        exclude group: "com.squareup.okhttp3", module: "okhttp"
    }

    /*retrofit*/
    /**
     *  [Retrofit]  Http客户端实现
     *  <proguard>
     *  https://github.com/square/retrofit
     *  Retrofit requires at minimum Java 8+ or Android API 21+.
     *      间接引入：
     *       [OkHttp] <proguard>
     *       [Okio] <proguard>
     *
     */
    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    /**
     *  [logging-interceptor] okhttp请求日志打印拦截器，版本号与okhttp版本一致
     *  https://github.com/square/okhttp/tree/master/okhttp-logging-interceptor
     */
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"
//    /**
//     *  [Retrofit CallAdapter]使用协程的形式返回Retrofit请求的结果
//     *  https://github.com/JakeWharton/retrofit2-kotlin-coroutines-adapter
//     */
//    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    /**
     *  [Retrofit Converter Gson] 使用Gson作为Retrofit的序列化和反序列化工具
     *  <proguard>
     *  https://github.com/square/retrofit/wiki/Converters
     *  https://github.com/google/gson
     */
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
}
